<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.UserMapper">
    <!--    namespace写userMapper的权限名，不然对应不上-->
    <!--在mapper里写各种标签，每个标签对应接口里的方法-->
    <!--    select标签，id=方法名，resultType=返回类型-->
    <!--    要想将方法里的参数传进来，需要用到#{参数}-->
    <!--    为了方便可以定义一个<sql></sql>后面直接引用即可-->
    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>
    <select id="selectById" resultType="User">

        select <include refid="selectFields"></include>
        from user
        where id=#{id}
    </select>

    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username=#{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email=#{email}
    </select>

    <!--    parameterType:用来声明参数类型-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl}, #{createTime})
    </insert>

    <update id="updateStatus">
        update user set status=#{status} where id=#{id};
    </update>

    <update id="updateHeader">
        update user set header_url=#{headerUrl} where id=#{id};
    </update>

    <update id="updatePassword">
        update user set password=#{password} where id=#{id};
    </update>
</mapper>